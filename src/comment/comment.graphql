type Comment{
    id: ID!
    created: String!
    comment: String!
    # author: User;
    # idea: Idea;

}

type CommentDTO{
    comment:String!
}

type Query{
    commentAll: [Comment]
    commentOne(id:ID!): Comment
    
}

type Mutation{
    insertComment( ideaId:ID!, comment:String!):Comment
    deleteComment( id:ID!):Comment
}


# {
#   commentAll{
#     id
# 		comment
#   }
# }


# query($id:ID!){
#   commentOne(id:$id){
#     id
# 		comment
#   }
# }

# mutation($ideaId:ID!, $comment:String!){
#   insertComment(ideaId:$ideaId, comment: $comment){
#     id
#     comment
#   }
# }
# {
#   "ideaId":"9E402A5E-D008-EA11-9052-005056C00008",
#   "comment":"This is my second comment"
# }
# {
#    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjlBNDAyQTVFLUQwMDgtRUExMS05MDUyLTAwNTA1NkMwMDAwOCIsInVzZXJuYW1lIjoiQ2VzYXI5IiwiaWF0IjoxNTc0MDkwNDI4LCJleHAiOjE1NzQ2OTUyMjh9.s-oDq5usH7Aaio1q6WIxDAqu306UmdajFWF-8fXLSNo"
# }